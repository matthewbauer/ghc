T12045TH1.hs:(8,3)-(11,52): Splicing declarations
    [d| type F :: k -> Type
        
        type family F a where
          F @Type Int = Bool
          F @(Type -> Type) Maybe = Char |]
  ======>
    type F :: k -> Type
    type family F a where
      F @Type Int = Bool
      F @(Type -> Type) Maybe = Char
T12045TH1.hs:14:3-31: Splicing declarations
    [d| data family D (a :: k) |] ======> data family D (a :: k)
T12045TH1.hs:16:3-40: Splicing declarations
    [d| data instance D @Type a = DBool |]
  ======>
    data instance D @Type a = DBool
T12045TH1.hs:18:3-50: Splicing declarations
    [d| data instance D @(Type -> Type) b = DChar |]
  ======>
    data instance D @(Type -> Type) b = DChar
